log4j.rootLogger=debug,stdout,error,File

### 输出到控制台 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern =  %d{ABSOLUTE} %5p %c{1}:%L - %m%n

### 输出到日志文件 ###
log4j.appender.debug = org.apache.log4j.DailyRollingFileAppender
log4j.appender.debug.File = logs/debug.log
log4j.appender.debug.Append = true
log4j.appender.debug.Threshold = DEBUG
log4j.appender.debug.layout = org.apache.log4j.PatternLayout
log4j.appender.debug.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

### 保存异常信息到单独文件 ###
log4j.appender.error = org.apache.log4j.DailyRollingFileAppender
log4j.appender.error.File = logs/error.log
log4j.appender.error.Append = true
log4j.appender.error.Threshold = ERROR
log4j.appender.error.layout = org.apache.log4j.PatternLayout
log4j.appender.error.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n


#File
#配置log4j每天产生日志，并且当天日志大于10M时自动生成另一个文件
log4j.appender.File=org.apache.log4j.RollingFileAppender
#可以灵活地指定布局模式
log4j.appender.File.layout=org.apache.log4j.PatternLayout
#自定义输出日志格式
log4j.appender.File.layout.ConversionPattern=%d [%t] %-5p [%c] - %m%n
#当文件大小超过10MB时，默认将原来的文件名改为auto.log.1
log4j.appender.File.MaxFileSize=10MB
#保留10个备份文件
log4j.appender.File.MaxBackupIndex=10
#输出日志文件路径
log4j.appender.File.File=/log/info.log
#Threshold:入口，临界值。只有INFO级别以及以上级别的日志才会输出到日志中
log4j.appender.File.Threshold=INFO

